name: Deploy Lambda Function on Merge to Main

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install CDK CLI
        run: npm install -g aws-cdk

      - name: Install Python dependencies
        run: python -m pip install -r requirements.txt
        working-directory: ./

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Zip the Lambda function
        run: zip function.zip app.py

      - name: Deploy lambda function
        env:
          AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_DEFAULT_ACCOUNT }}
        run: |
          aws lambda create-function — function-name nemo-ai-jira-ingestion-api \
          — handler lambda_function.lambda_handler — zip-file fileb://function.zip

#      - name: Zip the Lambda function
#        run: |
#            cp -r ./*.py
#            zip -r ../lambda_function.zip .
#
#      - name: Check if Lambda function exists
#        id: check_lambda
#        run: |
#          if aws lambda get-function — function-name ${{ env.LAMBDA_FUNCTION_NAME }}; then
#          echo “::set-output name=lambda_exists::true”
#          else
#            echo “::set-output name=lambda_exists::false”
#          fi
#
#      - name: Create or Update Lambda function
#        run: |
#          if [ “${{ steps.check_lambda.outputs.lambda_exists }}” == “false” ]; then
#          echo “Creating Lambda function…”
#          aws lambda create-function — function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
#          — handler lambda_function.lambda_handler — zip-file fileb://function.zip
#          else
#          echo “Updating Lambda function…”
#          aws lambda update-function-code \
#          — function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
#          — zip-file fileb://function.zip — publish
#          fi
#      - name: Clean up
#        run: rm function.zip